import 'dart:convert'; // ‚Üê –î–û–ë–ê–í–ò–¢–¨ –¥–ª—è jsonEncode/jsonDecode
import 'package:flutter/foundation.dart';
import 'package:hive/hive.dart';
import 'package:path_provider/path_provider.dart';
import 'package:hive_flutter/hive_flutter.dart'; // ‚Üê –î–û–ë–ê–í–ò–¢–¨ –¥–ª—è initFlutter
import 'package:cloud_firestore/cloud_firestore.dart'; // ‚Üê –î–û–ë–ê–í–ò–¢–¨
import '../models/app_user.dart';
import '../models/project.dart';
import '../models/task.dart';
import '../models/subtask.dart';
import '../models/progress_history.dart';

class LocalRepository {
  static const String _userBoxName = 'userData';
  static const String _settingsBoxName = 'settings';

  late Box<AppUser> _userBox;
  late Box<dynamic> _settingsBox;
  bool _isInitialized = false;

  Future<void> init() async {
    if (_isInitialized) return;

    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è Web –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö
      if (kIsWeb) {
        // –î–ª—è Web –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        await Hive.initFlutter();
      } else {
        final appDocDir = await getApplicationDocumentsDirectory();
        Hive.init(appDocDir.path);
      }

      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä—ã
      if (!Hive.isAdapterRegistered(0)) {
        Hive.registerAdapter(AppUserAdapter());
      }
      if (!Hive.isAdapterRegistered(1)) {
        Hive.registerAdapter(ProjectAdapter());
      }
      if (!Hive.isAdapterRegistered(2)) {
        Hive.registerAdapter(TaskAdapter());
      }
      if (!Hive.isAdapterRegistered(3)) {
        Hive.registerAdapter(SubtaskAdapter());
      }
      if (!Hive.isAdapterRegistered(4)) {
        Hive.registerAdapter(ProgressHistoryAdapter());
      }


      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ–∫—Å—ã
      _userBox = await Hive.openBox<AppUser>(_userBoxName);
      _settingsBox = await Hive.openBox(_settingsBoxName);

      _isInitialized = true;
      print('‚úÖ Hive initialized successfully');
    } catch (e) {
      print('‚ùå Error initializing Hive: $e');
      rethrow;
    }
  }


  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<void> saveUser(AppUser user) async {
    await _userBox.put('currentUser', user);
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  AppUser? loadUser() {
    return _userBox.get('currentUser');
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
  Future<String> exportToJson() async {
    final user = loadUser();
    if (user == null) {
      throw Exception('No user data to export');
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –∑–∞–º–µ–Ω—è—è Timestamp –Ω–∞ DateTime
    final jsonMap = _convertToJsonCompatible(user.toFirestore());

    // ‚úÖ –ö–†–ê–°–ò–í–û–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï JSON
    final jsonEncoder = JsonEncoder.withIndent('  ');
    return jsonEncoder.convert(jsonMap);
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ Timestamp -> DateTime
  Map<String, dynamic> _convertToJsonCompatible(Map<String, dynamic> data) {
    final result = Map<String, dynamic>.from(data);

    result.forEach((key, value) {
      if (value is Timestamp) {
        result[key] = value.toDate().toIso8601String();
      } else if (value is Map<String, dynamic>) {
        result[key] = _convertToJsonCompatible(value);
      } else if (value is List) {
        result[key] = value.map((item) {
          if (item is Timestamp) {
            return item.toDate().toIso8601String();
          } else if (item is Map<String, dynamic>) {
            return _convertToJsonCompatible(item);
          }
          return item;
        }).toList();
      }
    });

    return result;
  }

  // –ò–º–ø–æ—Ä—Ç –∏–∑ JSON
  Future<AppUser> importFromJson(String jsonString) async {
    print('üîÑ –ù–∞—á–∞–ª–æ –∏–º–ø–æ—Ä—Ç–∞ JSON, –¥–ª–∏–Ω–∞: ${jsonString.length} —Å–∏–º–≤–æ–ª–æ–≤');

    try {
      final cleanedJsonString = jsonString.trim();
      print('‚úÖ JSON –æ—á–∏—â–µ–Ω, –¥–ª–∏–Ω–∞: ${cleanedJsonString.length} —Å–∏–º–≤–æ–ª–æ–≤');

      // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      if (cleanedJsonString.length > 100) {
        print('üìù –ù–∞—á–∞–ª–æ JSON: ${cleanedJsonString.substring(0, 100)}...');
      } else {
        print('üìù –í–µ—Å—å JSON: $cleanedJsonString');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON
      if (!cleanedJsonString.startsWith('{') || !cleanedJsonString.endsWith('}')) {
        print('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON: –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å { –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è }');
        throw Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON —Ñ–∞–π–ª–∞');
      }

      final jsonMap = jsonDecode(cleanedJsonString) as Map<String, dynamic>;
      print('‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω');

      // ‚úÖ –ü–†–û–í–ï–†–Ø–ï–ú –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
      if (jsonMap['username'] == null) {
        print('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: username');
        throw Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ username');
      }
      if (jsonMap['email'] == null) {
        print('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: email');
        throw Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ email');
      }
      if (jsonMap['projects'] == null) {
        print('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: projects');
        throw Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ projects');
      }

      print('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${jsonMap['username']}');
      print('üìß Email: ${jsonMap['email']}');
      print('üì¶ –ü—Ä–æ–µ–∫—Ç–æ–≤: ${jsonMap['projects'] is List ? (jsonMap['projects'] as List).length : '–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç'}');

      final user = AppUser.fromFirestore(jsonMap);
      await saveUser(user);

      print('‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω: ${user.username}, –ø—Ä–æ–µ–∫—Ç–æ–≤: ${user.projects.length}');
      print('üìà –ó–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${user.progressHistory.length}');

      return user;

      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –≤ importFromJson
    } on FormatException catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ JSON: $e');
      // –£–±–∏—Ä–∞–µ–º e.stackTrace, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –Ω–µ—Ç –≤ FormatException
      throw Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON: $e');
    } catch (e) {
      print('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ JSON: $e');
      // –î–ª—è –æ–±—â–µ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å stackTrace –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      throw Exception('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: $e');
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  Future<void> clearAllData() async {
    await _userBox.clear();
    await _settingsBox.clear();
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –±–æ–∫—Å–æ–≤
  Future<void> close() async {
    await _userBox.close();
    await _settingsBox.close();
  }
}