// lib/services/completion_service.dart
import '../models/task.dart';
import '../models/stage.dart';
import '../models/step.dart' as custom_step;
import '../models/progress_history.dart';
import '../services/task_service.dart';

class CompletionService {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  static Map<String, dynamic> completeItem(
      dynamic item, {
        required int stepsAdded,
        required String itemName,
        required String itemType,
      }) {
    dynamic updatedItem;
    int actualSteps = stepsAdded;

    print('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞: $itemName, —Ç–∏–ø: $itemType, —à–∞–≥–∏: $stepsAdded');

    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞
    if (item is Task) {
      if (item.taskType == "singleStep") {
        print('‚úÖ –≠—Ç–æ –æ–¥–Ω–æ—à–∞–≥–æ–≤–∞—è –∑–∞–¥–∞—á–∞ - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ');
        updatedItem = TaskService.toggleTaskCompletion(item);
        actualSteps = updatedItem.isCompleted ? 1 : -1;
        print('üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${updatedItem.isCompleted}');
      } else {
        print('‚úÖ –≠—Ç–æ –ø–æ—à–∞–≥–æ–≤–∞—è –∑–∞–¥–∞—á–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å');
        updatedItem = TaskService.addProgressToTask(item, stepsAdded);
        actualSteps = stepsAdded;
      }
    } else if (item is Stage) {
      if (item.stageType == "singleStep") {
        print('‚úÖ –≠—Ç–æ –æ–¥–Ω–æ—à–∞–≥–æ–≤—ã–π —ç—Ç–∞–ø - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ');
        updatedItem = TaskService.toggleStageCompletion(item);
        actualSteps = updatedItem.isCompleted ? 1 : -1;
      } else {
        print('‚úÖ –≠—Ç–æ –ø–æ—à–∞–≥–æ–≤—ã–π —ç—Ç–∞–ø - –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å');
        updatedItem = TaskService.addProgressToStage(item, stepsAdded);
        actualSteps = stepsAdded;
      }
    } else if (item is custom_step.Step) {
      if (item.stepType == "singleStep") {
        print('‚úÖ –≠—Ç–æ –æ–¥–Ω–æ—à–∞–≥–æ–≤—ã–π —à–∞–≥ - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ');
        updatedItem = TaskService.toggleStepCompletion(item);
        actualSteps = updatedItem.isCompleted ? 1 : -1;
      } else {
        print('‚úÖ –≠—Ç–æ –ø–æ—à–∞–≥–æ–≤—ã–π —à–∞–≥ - –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å');
        updatedItem = TaskService.addProgressToStep(item, stepsAdded);
        actualSteps = stepsAdded;
      }
    } else {
      print('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞: ${item.runtimeType}');
      return {
        'updatedItem': item,
        'progressHistory': ProgressHistory(
          date: DateTime.now(),
          itemName: itemName,
          stepsAdded: 0,
          itemType: itemType,
        ),
      };
    }

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    final progressHistory = ProgressHistory(
      date: DateTime.now(),
      itemName: itemName,
      stepsAdded: actualSteps,
      itemType: itemType,
    );

    print('üìù –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏: $itemName, —à–∞–≥–æ–≤: $actualSteps');

    return {
      'updatedItem': updatedItem,
      'progressHistory': progressHistory,
    };
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
  static String getItemType(dynamic item) {
    if (item is Task) return 'task';
    if (item is Stage) return 'stage';
    if (item is custom_step.Step) return 'step';
    return 'unknown';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
  static String getItemName(dynamic item) {
    return item.name;
  }

  static Map<String, dynamic> completeItemWithHistory({
    required dynamic item,
    required int stepsAdded,
    required String itemName,
    required String itemType,
    required List<dynamic> currentHistory,
  }) {
    final result = completeItem(
      item,
      stepsAdded: stepsAdded,
      itemName: itemName,
      itemType: itemType,
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (result['progressHistory'].stepsAdded != 0) {
      final updatedHistory = List<dynamic>.from(currentHistory)
        ..add(result['progressHistory']);

      print('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞');

      return {
        'updatedItem': result['updatedItem'],
        'updatedHistory': updatedHistory,
      };
    }

    print('‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –∏—Å—Ç–æ—Ä–∏—è –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');

    return {
      'updatedItem': result['updatedItem'],
      'updatedHistory': currentHistory,
    };
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–Ω–æ—Å–æ–º daily –∑–∞–¥–∞—á

  static Map<String, dynamic> completeItemWithAutoMove({
    required dynamic item,
    required int stepsAdded,
    required String itemName,
    required String itemType,
    required List<dynamic> currentHistory,
  }) {
    print('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –∞–≤—Ç–æ-–ø–µ—Ä–µ–Ω–æ—Å–æ–º: $itemName');

    // –î–ª—è recurring –∑–∞–¥–∞—á - –ø—Ä–æ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    // –°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –º–µ—Ö–∞–Ω–∏–∑–º–æ–º
    return completeItemWithHistory(
      item: item,
      stepsAdded: stepsAdded,
      itemName: itemName,
      itemType: itemType,
      currentHistory: currentHistory,
    );
  }

  // –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤ CompletionService
  static Map<String, dynamic> completeRecurringTask(Task task, int stepsAdded) {
    //final bool wasCompleted = task.isCompleted;


    // –î–ª—è recurring –∑–∞–¥–∞—á –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∏—Å—Ç–æ—Ä–∏—é
    // –Ω–æ –Ω–µ –º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    final progressHistory = ProgressHistory(
      date: DateTime.now(),
      itemName: task.name,
      stepsAdded: stepsAdded,
      itemType: 'task',
    );

    return {
      'updatedItem': task, // –ù–µ –º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É –¥–ª—è recurring
      'progressHistory': progressHistory,
    };
  }
}